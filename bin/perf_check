#!/usr/bin/env ruby

require 'perf_check'

ORIGINAL_ARGV = ARGV.clone

if File.exists?("#{PerfCheck.app_root}/tmp/pids/server.pid")
  abort("It looks like a rails server is already running. Shut it down before continuing with perf_check.")
end

perf_check = PerfCheck.new

# last exception thrown gets stored and passed to callbacks 
at_exit do
  cbdata = {}
  
  if $!
    cbdata[:error_message] = "#{$!.class}: #{$!.message}\n"
    cbdata[:error_message] << $!.backtrace.map{|x| "\t#{x}"}.join("\n")
  end

  perf_check.trigger_when_finished_callbacks(cbdata)
end

PerfCheck.load_config
PerfCheck::Options.parse!

ARGV.each{ |route| perf_check.add_test_case(route) }

if perf_check.test_cases.empty?
  abort(PerfCheck::Options.help)
end

perf_check.run

if PerfCheck.config.brief
  perf_check.print_brief_results
elsif PerfCheck.config.json
  perf_check.print_json_results
else
  perf_check.print_full_results
end

#            _______________________
#           < You made it faster!!! >
#            -----------------------
#           o                             .       .
#            o                           / `.   .' "
#             o                  .---.  <    > <    >  .---.
#              O                 |    \  \ - ~ ~ - /  /    |
#                    _____          ..-~             ~-..-~
#                   |     |   \~~~\.'                    `./~~~/
#                  =========   \__/    R U B Y T U N E     \__/
#                 .'  O    \     /               /       \  "
#                (_____,    `._.'               |         }  \/~~~/
#                 `----.          /       }     |        /    \__/
#                       `-.      |       /      |       /      `. ,~~|
#                           ~-.__|      /_ - ~ ^|      /- _      `..-'
#                                |     /        |     /     ~-.     `-. _  _  _
#                                |_____|        |_____|         ~ - . _ _ _ _ _>
#
